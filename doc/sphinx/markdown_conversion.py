import pypandoc
from pypandoc.pandoc_download import download_pandoc
import re

def convertMarkdownDocsToRst():
    # TODO Only download pandoc if it's not found
    download_pandoc()

    # TODO make various edits to improve conversion, like removing the Table of Contents
    input_dir = '../../doc'
    output_dir = 'generated_docs'
    file_base_names = ['UsingBoostTest',
                       'UsingCatch',
                       'UsingDoctest',
                       'UsingGoogleTests',
                       'UsingUT',
                       'SupportingNewTestFramework']
    for file_base_name in file_base_names:
        convert_markdown_to_restructured_text(file_base_name, input_dir, output_dir)


def convert_markdown_to_restructured_text(file_base_name, input_dir, output_dir):
    with open(f'{input_dir}/{file_base_name}.md') as markdown_file:
        content = markdown_file.read()

        content = fix_up_markdown_content(file_base_name, content)
    output = pypandoc.convert_text(''.join(content), 'rst', format='md',
                                   outputfile=f'{output_dir}/{file_base_name}.rst')


def fix_up_markdown_content(file_base_name, content):
    # Remove 'GENERATED FILE' comment
    generated_file_message = \
        f"""<!--
GENERATED FILE - DO NOT EDIT
This file was generated by [MarkdownSnippets](https://github.com/SimonCropp/MarkdownSnippets).
Source File: /doc/mdsource/{file_base_name}.source.md
To change this file edit the source file and then execute ./run_markdown_templates.sh.
-->
"""
    content = content.replace(generated_file_message, '')
    assert ('GENERATED FILE - DO NOT EDIT' not in content)

    # Remove table of contents
    content = re.sub(r'<!-- toc -->.*<!-- endtoc -->', '', content, count=1, flags=re.DOTALL)

    # Remove 'Back to User Guide'
    back_to_user_guide = (
        '---\n'
        '\n'
        '[Back to User Guide](/doc/README.md#top)\n'
    )
    content = content.replace(back_to_user_guide, '')

    # Remove 'anchor' links from all code snippets
    content = re.sub(
        r"\| <a href='#snippet-[^']+' title='Navigate to start of snippet `[^']+`'>anchor</a>",
        '', content)

    # Fix "WARNING: Pygments lexer name 'h' is not known"
    # This must be done before
    # Todo: find out how to fix this in conf.py - this is a horrible hack!
    content = content.replace(
        '\n```h\n',
        '\n```cpp\n')

    return content
