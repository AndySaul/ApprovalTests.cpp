name: build

on:
  push:
    branches:
      - '*'
      - '!travis_ccache'
  pull_request:
    branches:
      - '*'
      - '!travis_ccache'

jobs:
  clang-format:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - uses: DoozyX/clang-format-lint-action@v0.5
        with:
          source: '.'
          exclude: './third_party'
          clangFormatVersion: 9

  # Commented-out, as it keeps failing with http 429 error - too many requests
  # e.g. https://github.com/approvals/ApprovalTests.cpp/runs/541867195
  #  markdown-link-check:
  #    runs-on: ubuntu-18.04
  #    steps:
  #      - uses: actions/checkout@master
  #      - uses: actions/setup-node@v1
  #        with:
  #          node-version: '12.x'
  #      - name: Install markdown-link-check
  #        run: npm i -g markdown-link-check
  #      - name: Run markdown-link-check on *.md files
  #        run: ./scripts/check_links.sh

  Linux:
    env:
      BUILD_DIR_PATH: ${{ github.workspace }}/build_space
    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name: ubuntu-18.04
            os: ubuntu-18.04
            generator: '"Unix Makefiles"'

          - job-name: ubuntu-18.04-ninja
            os: ubuntu-18.04
            generator: '"Ninja"'
            BUILD_DIR_PATH: ${{ github.workspace }}/../build_space
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: seanmiddleditch/gha-setup-ninja@v1
        if: contains(matrix.generator, 'Ninja')

      # TODO Remove these uses of ::set-env - they cause a security warning
#      - name: set env for in-source build tree
#        if: matrix.in_source_build == true
#        run: |
#          echo "::set-env name=BUILD_DIR_PATH::${{ env.IN_TREE_BUILD_DIR }}"
#      - name: set env out-of-source
#        if: matrix.in_source_build == false
#        run: |
#          echo "::set-env name=BUILD_DIR_PATH::${{ env.OUT_OF_TREE_BUILD_DIR }}"
      - name: check env
        run: |
          echo Build space: ${{ env.BUILD_DIR_PATH }}


      - name: install boost for linux
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y libboost-all-dev

      - name: make build space
        run: |
          mkdir ${{ env.BUILD_DIR_PATH }}
      - name: cmake
        run: |
          cmake --version
          cmake -G ${{ matrix.generator }} ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: build
        run: cmake --build .
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: test
        run: ctest --verbose --output-on-failure -C Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}

  Mac:
    env:
      IN_TREE_BUILD_DIR: ${{ github.workspace }}/build_space
      OUT_OF_TREE_BUILD_DIR: ${{ github.workspace }}/../build_space
      # TODO Remove allowance of unsecure commands
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name:  macOS-latest
            os: macOS-latest
            generator: '"Unix Makefiles"'
            in_source_build: true

          - job-name:  macOS-latest-unity
            os: macOS-latest
            generator: '"Unix Makefiles" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50'
            in_source_build: true

          - job-name:  macOS-latest-ninja
            os: macOS-latest
            generator: '"Ninja"'
            in_source_build: false

          - job-name:  macOS-latest-ninja-unity
            os: macOS-latest
            generator: '"Ninja" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50'
            in_source_build: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: seanmiddleditch/gha-setup-ninja@v1
        if: contains(matrix.generator, 'Ninja')

      # TODO Remove these uses of ::set-env - they cause a security warning
      - name: set env for in-source build tree
        if: matrix.in_source_build == true
        run: |
          echo "::set-env name=BUILD_DIR_PATH::${{ env.IN_TREE_BUILD_DIR }}"
      - name: set env out-of-source
        if: matrix.in_source_build == false
        run: |
          echo "::set-env name=BUILD_DIR_PATH::${{ env.OUT_OF_TREE_BUILD_DIR }}"
      - name: check env
        run: |
          echo Build space: ${{ env.BUILD_DIR_PATH }}


      - name: install boost for macOS
        run: |
          brew install boost

      - name: make build space
        run: |
          mkdir ${{ env.BUILD_DIR_PATH }}
      - name: cmake
        run: |
          cmake --version
          cmake -G ${{ matrix.generator }} ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: build
        run: cmake --build .
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: test
        run: ctest --verbose --output-on-failure -C Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}

  Windows:
    env:
      IN_TREE_BUILD_DIR: ${{ github.workspace }}/build_space
      OUT_OF_TREE_BUILD_DIR: ${{ github.workspace }}/../build_space
      # TODO Remove allowance of unsecure commands
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name: windows-latest
            os: windows-latest
            generator: '"Visual Studio 16 2019"'
            in_source_build: true

          - job-name: windows-latest (clangcl)
            os: windows-latest
            generator: '"Visual Studio 16 2019" -T "clangcl"'
            in_source_build: true

          - job-name: windows-2016
            os: windows-2016
            generator: '"Visual Studio 15 2017"'
            in_source_build: true

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: seanmiddleditch/gha-setup-ninja@v1
        if: contains(matrix.generator, 'Ninja')

      # TODO Remove these uses of ::set-env - they cause a security warning
      - name: set env for in-source build tree
        if: matrix.in_source_build == true
        run: |
          echo "::set-env name=BUILD_DIR_PATH::${{ env.IN_TREE_BUILD_DIR }}"
      - name: set env out-of-source
        if: matrix.in_source_build == false
        run: |
          echo "::set-env name=BUILD_DIR_PATH::${{ env.OUT_OF_TREE_BUILD_DIR }}"
      - name: check env
        run: |
          echo Build space: ${{ env.BUILD_DIR_PATH }}


      - name: set up boost for windows
        run: |
          echo "::set-env name=BOOST_ROOT::$env:BOOST_ROOT_1_72_0"
          echo "::set-env name=BOOST_INCLUDEDIR::${{ env.BOOST_ROOT }}\boost\include"
          echo "::set-env name=BOOST_LIBRARYDIR::${{ env.BOOST_ROOT }}\lib"

      - name: make build space
        run: |
          mkdir ${{ env.BUILD_DIR_PATH }}
      - name: cmake
        run: |
          cmake --version
          cmake -G ${{ matrix.generator }} ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: build
        run: cmake --build .
        working-directory: ${{ env.BUILD_DIR_PATH }}
      - name: test
        run: ctest --verbose --output-on-failure -C Debug
        working-directory: ${{ env.BUILD_DIR_PATH }}
