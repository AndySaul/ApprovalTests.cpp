name: build

on:
  push:
    branches:
      - '*'
      - '!travis_ccache'
  pull_request:
    branches:
      - '*'
      - '!travis_ccache'

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DoozyX/clang-format-lint-action@v0.5
        with:
          source: '.'
          exclude: './third_party'
          clangFormatVersion: 9

  # Commented-out, as it keeps failing with http 429 error - too many requests
  # e.g. https://github.com/approvals/ApprovalTests.cpp/runs/541867195
  #  markdown-link-check:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@master
  #      - uses: actions/setup-node@v1
  #        with:
  #          node-version: '12.x'
  #      - name: Install markdown-link-check
  #        run: npm i -g markdown-link-check
  #      - name: Run markdown-link-check on *.md files
  #        run: ./scripts/check_links.sh

  build:
    env:
      IN_TREE_BUILD_DIR: ${{ github.workspace }}/build_space
      OUT_OF_TREE_BUILD_DIR: ${{ github.workspace }}/../build_space
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    strategy:
      fail-fast: false
      matrix:
        buildtype: [
          windows-latest,
          windows-latest (clangcl),
          windows-2016,
          ubuntu-latest,
          ubuntu-latest-ninja,
          macOS-latest,
          macOS-latest-unity,
          macOS-latest-ninja,
          macOS-latest-ninja-unity,
        ]
        include:
        - buildtype: windows-latest
          os: windows-latest
          generator: '"Visual Studio 16 2019"'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype: windows-latest (clangcl)
          os: windows-latest
          generator: '"Visual Studio 16 2019" -T "clangcl"'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype: windows-2016
          os: windows-2016
          generator: '"Visual Studio 15 2017"'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype: ubuntu-latest
          os: ubuntu-latest
          generator: '"Unix Makefiles"'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype: ubuntu-latest-ninja
          os: ubuntu-latest
          generator: '"Ninja"'
          build_path: ${{ env.OUT_OF_TREE_BUILD_DIR }}

        - buildtype:  macOS-latest
          os: macOS-latest
          generator: '"Unix Makefiles"'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype:  macOS-latest-unity
          os: macOS-latest
          generator: '"Unix Makefiles" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}

        - buildtype:  macOS-latest-ninja
          os: macOS-latest
          generator: '"Ninja"'
          build_path: ${{ env.OUT_OF_TREE_BUILD_DIR }}

        - buildtype:  macOS-latest-ninja-unity
          os: macOS-latest
          generator: '"Ninja" -DCMAKE_UNITY_BUILD=yes -DCMAKE_UNITY_BUILD_BATCH_SIZE=50'
          build_path: ${{ env.IN_TREE_BUILD_DIR }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@master
    - uses: seanmiddleditch/gha-setup-ninja@v1
      if: contains(matrix.generator, 'Ninja')

    - name: check build directory
      run: |
        echo Build space: matrix.build_path


    - name: install boost for macOS
      if: matrix.os == 'macOS-latest'
      run: |
        brew install boost
    - name: install boost for linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libboost-all-dev
    - name: set up boost for windows
      if: matrix.os == 'windows-latest' || matrix.os == 'windows-2016'
      run: |
        echo "::set-env name=BOOST_ROOT::$env:BOOST_ROOT_1_72_0"
        echo "::set-env name=BOOST_INCLUDEDIR::${{ env.BOOST_ROOT }}\boost\include"
        echo "::set-env name=BOOST_LIBRARYDIR::${{ env.BOOST_ROOT }}\lib"

    - name: make build space
      run: |
        mkdir matrix.build_path
    - name: cmake
      run: |
        cmake --version
        cmake -G ${{ matrix.generator }} ${{ github.workspace }} -DCMAKE_BUILD_TYPE=Debug
      working-directory: matrix.build_path
    - name: build
      run: cmake --build .
      working-directory: matrix.build_path
    - name: test
      run: ctest --verbose --output-on-failure -C Debug
      working-directory: matrix.build_path
